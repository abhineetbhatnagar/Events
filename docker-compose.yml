version: '3.3'

services:

  mongo:
    image: mongo:latest
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: noroot
      MONGO_INITDB_ROOT_PASSWORD: nopass123
    ports:
      - 27017:27017
    volumes: 
      - ./mongo-volume:/data/mongodb

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: noroot
      ME_CONFIG_MONGODB_ADMINPASSWORD: nopass123
    depends_on:
      - mongo

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password123
    volumes:
      - ./rabbitmq/etc/:/data/rabbitmq/etc
      - ./rabbitmq/data/:/data/rabbitmq/data
      - ./rabbitmq/logs/:/data/rabbitmq/logs

  tenancyapi:
    image: tenancyapi
    restart: unless-stopped
    ports:
      - "5001:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    build:
      context: .
      dockerfile: Events.Tenancy/Dockerfile
    depends_on:
      - mongo
      
  
  managerapi:
    image: managerapi
    restart: unless-stopped
    ports:
      - "5002:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    build:
      context: .
      dockerfile: Events.Manager/Dockerfile
    depends_on:
      - mongo

  notificationsapi:
    image: notificationsapi
    restart: unless-stopped
    ports:
      - "5003:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    build:
      context: .
      dockerfile: Events.Notification/Dockerfile
    depends_on:
      - mongo

  apigateway:
    image: apigateway
    restart: unless-stopped
    ports:
      - "5000:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    build:
      context: .
      dockerfile: Events.APIGateway/Dockerfile
    depends_on:
      - tenancyapi
      - managerapi
      - notificationsapi
